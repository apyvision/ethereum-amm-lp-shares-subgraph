// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  Address,
  DataSourceTemplate,
  DataSourceContext
} from "@graphprotocol/graph-ts";

export class WeightedPool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("WeightedPool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "WeightedPool",
      [address.toHex()],
      context
    );
  }
}

export class BalancerBPool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("BalancerBPool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "BalancerBPool",
      [address.toHex()],
      context
    );
  }
}

export class ValueBPool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("ValueBPool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "ValueBPool",
      [address.toHex()],
      context
    );
  }
}

export class UniswapPair extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("UniswapPair", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "UniswapPair",
      [address.toHex()],
      context
    );
  }
}

export class SushiswapPair extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("SushiswapPair", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "SushiswapPair",
      [address.toHex()],
      context
    );
  }
}

export class OneInchPair extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("OneInchPair", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "OneInchPair",
      [address.toHex()],
      context
    );
  }
}
