// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LOG_NEW_POOL extends ethereum.Event {
  get params(): LOG_NEW_POOL__Params {
    return new LOG_NEW_POOL__Params(this);
  }
}

export class LOG_NEW_POOL__Params {
  _event: LOG_NEW_POOL;

  constructor(event: LOG_NEW_POOL) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BFactory extends ethereum.SmartContract {
  static bind(address: Address): BFactory {
    return new BFactory("BFactory", address);
  }

  bpoolCreator(): Address {
    let result = super.call("bpoolCreator", "bpoolCreator():(address)", []);

    return result[0].toAddress();
  }

  try_bpoolCreator(): ethereum.CallResult<Address> {
    let result = super.tryCall("bpoolCreator", "bpoolCreator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  collectedFund(): Address {
    let result = super.call("collectedFund", "collectedFund():(address)", []);

    return result[0].toAddress();
  }

  try_collectedFund(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "collectedFund",
      "collectedFund():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  collectedToken(): Address {
    let result = super.call("collectedToken", "collectedToken():(address)", []);

    return result[0].toAddress();
  }

  try_collectedToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "collectedToken",
      "collectedToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  defaultExitFee(): BigInt {
    let result = super.call("defaultExitFee", "defaultExitFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_defaultExitFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "defaultExitFee",
      "defaultExitFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  governance(): Address {
    let result = super.call("governance", "governance():(address)", []);

    return result[0].toAddress();
  }

  try_governance(): ethereum.CallResult<Address> {
    let result = super.tryCall("governance", "governance():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isBPool(b: Address): boolean {
    let result = super.call("isBPool", "isBPool(address):(bool)", [
      ethereum.Value.fromAddress(b)
    ]);

    return result[0].toBoolean();
  }

  try_isBPool(b: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isBPool", "isBPool(address):(bool)", [
      ethereum.Value.fromAddress(b)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  newBPool(): Address {
    let result = super.call("newBPool", "newBPool():(address)", []);

    return result[0].toAddress();
  }

  try_newBPool(): ethereum.CallResult<Address> {
    let result = super.tryCall("newBPool", "newBPool():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CollectCall extends ethereum.Call {
  get inputs(): CollectCall__Inputs {
    return new CollectCall__Inputs(this);
  }

  get outputs(): CollectCall__Outputs {
    return new CollectCall__Outputs(this);
  }
}

export class CollectCall__Inputs {
  _call: CollectCall;

  constructor(call: CollectCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CollectCall__Outputs {
  _call: CollectCall;

  constructor(call: CollectCall) {
    this._call = call;
  }
}

export class GovernanceRecoverUnsupportedCall extends ethereum.Call {
  get inputs(): GovernanceRecoverUnsupportedCall__Inputs {
    return new GovernanceRecoverUnsupportedCall__Inputs(this);
  }

  get outputs(): GovernanceRecoverUnsupportedCall__Outputs {
    return new GovernanceRecoverUnsupportedCall__Outputs(this);
  }
}

export class GovernanceRecoverUnsupportedCall__Inputs {
  _call: GovernanceRecoverUnsupportedCall;

  constructor(call: GovernanceRecoverUnsupportedCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class GovernanceRecoverUnsupportedCall__Outputs {
  _call: GovernanceRecoverUnsupportedCall;

  constructor(call: GovernanceRecoverUnsupportedCall) {
    this._call = call;
  }
}

export class NewBPoolCall extends ethereum.Call {
  get inputs(): NewBPoolCall__Inputs {
    return new NewBPoolCall__Inputs(this);
  }

  get outputs(): NewBPoolCall__Outputs {
    return new NewBPoolCall__Outputs(this);
  }
}

export class NewBPoolCall__Inputs {
  _call: NewBPoolCall;

  constructor(call: NewBPoolCall) {
    this._call = call;
  }
}

export class NewBPoolCall__Outputs {
  _call: NewBPoolCall;

  constructor(call: NewBPoolCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class SetBpoolCreatorCall extends ethereum.Call {
  get inputs(): SetBpoolCreatorCall__Inputs {
    return new SetBpoolCreatorCall__Inputs(this);
  }

  get outputs(): SetBpoolCreatorCall__Outputs {
    return new SetBpoolCreatorCall__Outputs(this);
  }
}

export class SetBpoolCreatorCall__Inputs {
  _call: SetBpoolCreatorCall;

  constructor(call: SetBpoolCreatorCall) {
    this._call = call;
  }

  get _bpoolCreator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBpoolCreatorCall__Outputs {
  _call: SetBpoolCreatorCall;

  constructor(call: SetBpoolCreatorCall) {
    this._call = call;
  }
}

export class SetCollectedFundCall extends ethereum.Call {
  get inputs(): SetCollectedFundCall__Inputs {
    return new SetCollectedFundCall__Inputs(this);
  }

  get outputs(): SetCollectedFundCall__Outputs {
    return new SetCollectedFundCall__Outputs(this);
  }
}

export class SetCollectedFundCall__Inputs {
  _call: SetCollectedFundCall;

  constructor(call: SetCollectedFundCall) {
    this._call = call;
  }

  get _collectedFund(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCollectedFundCall__Outputs {
  _call: SetCollectedFundCall;

  constructor(call: SetCollectedFundCall) {
    this._call = call;
  }
}

export class SetCollectedTokenCall extends ethereum.Call {
  get inputs(): SetCollectedTokenCall__Inputs {
    return new SetCollectedTokenCall__Inputs(this);
  }

  get outputs(): SetCollectedTokenCall__Outputs {
    return new SetCollectedTokenCall__Outputs(this);
  }
}

export class SetCollectedTokenCall__Inputs {
  _call: SetCollectedTokenCall;

  constructor(call: SetCollectedTokenCall) {
    this._call = call;
  }

  get _collectedToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCollectedTokenCall__Outputs {
  _call: SetCollectedTokenCall;

  constructor(call: SetCollectedTokenCall) {
    this._call = call;
  }
}

export class SetDefaultExitFeeCall extends ethereum.Call {
  get inputs(): SetDefaultExitFeeCall__Inputs {
    return new SetDefaultExitFeeCall__Inputs(this);
  }

  get outputs(): SetDefaultExitFeeCall__Outputs {
    return new SetDefaultExitFeeCall__Outputs(this);
  }
}

export class SetDefaultExitFeeCall__Inputs {
  _call: SetDefaultExitFeeCall;

  constructor(call: SetDefaultExitFeeCall) {
    this._call = call;
  }

  get _defaultExitFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDefaultExitFeeCall__Outputs {
  _call: SetDefaultExitFeeCall;

  constructor(call: SetDefaultExitFeeCall) {
    this._call = call;
  }
}

export class SetGovernanceCall extends ethereum.Call {
  get inputs(): SetGovernanceCall__Inputs {
    return new SetGovernanceCall__Inputs(this);
  }

  get outputs(): SetGovernanceCall__Outputs {
    return new SetGovernanceCall__Outputs(this);
  }
}

export class SetGovernanceCall__Inputs {
  _call: SetGovernanceCall;

  constructor(call: SetGovernanceCall) {
    this._call = call;
  }

  get _governance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGovernanceCall__Outputs {
  _call: SetGovernanceCall;

  constructor(call: SetGovernanceCall) {
    this._call = call;
  }
}

export class SetPoolCollectedFeeCall extends ethereum.Call {
  get inputs(): SetPoolCollectedFeeCall__Inputs {
    return new SetPoolCollectedFeeCall__Inputs(this);
  }

  get outputs(): SetPoolCollectedFeeCall__Outputs {
    return new SetPoolCollectedFeeCall__Outputs(this);
  }
}

export class SetPoolCollectedFeeCall__Inputs {
  _call: SetPoolCollectedFeeCall;

  constructor(call: SetPoolCollectedFeeCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _collectedFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetPoolCollectedFeeCall__Outputs {
  _call: SetPoolCollectedFeeCall;

  constructor(call: SetPoolCollectedFeeCall) {
    this._call = call;
  }
}
